{
  "stats": {
    "suites": 12,
    "tests": 8,
    "passes": 8,
    "pending": 0,
    "failures": 0,
    "start": "2023-11-13T11:27:31.061Z",
    "end": "2023-11-13T11:27:31.270Z",
    "duration": 209,
    "testsRegistered": 8,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "1beb1c3b-899b-473d-b6d0-123d87aa3012",
      "title": "",
      "fullFile": "C:\\Users\\mermo\\Documents\\GitHub\\harmony\\api\\test\\test.js",
      "file": "\\test\\test.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ad4998d9-3b61-429a-9914-4e2913575d29",
          "title": "User Operations",
          "fullFile": "C:\\Users\\mermo\\Documents\\GitHub\\harmony\\api\\test\\test.js",
          "file": "\\test\\test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"User Operations\"",
              "fullTitle": "User Operations \"before all\" hook in \"User Operations\"",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Implement necessary steps to initialize test environment\ndone();",
              "err": {},
              "uuid": "2d24b06a-a2ef-4462-8401-b2159809ab87",
              "parentUUID": "ad4998d9-3b61-429a-9914-4e2913575d29",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"User Operations\"",
              "fullTitle": "User Operations \"after all\" hook in \"User Operations\"",
              "timedOut": false,
              "duration": 14,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log('User ID:', newUserCredentials.userId);\nif (!newUserCredentials.userId) {\n    console.error('No user ID to delete');\n    return done();\n}\n    \nchai.request(server)\n    .post('/api/auth/login')\n    .send({\n        email: 'admin@admin.com',\n        password: 'admin'\n    })\n    .end((err, res) => {\n        expect(err).to.be.null;\n        res.should.have.status(200);\n        const adminToken = res.body.accessToken;\n    \n        chai.request(server)\n            .delete(`/api/user/delete/${newUserCredentials.userId}`)\n            .set('Authorization', `Bearer ${adminToken}`)\n            .end((err, res) => {\n                expect(err).to.be.null;\n                res.should.have.status(204);\n                done();\n            });\n    });",
              "err": {},
              "uuid": "ae0d8268-fbc3-4349-b2f2-86ef1913aac5",
              "parentUUID": "ad4998d9-3b61-429a-9914-4e2913575d29",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "367e2501-9c78-4776-80b3-03b01c6e5286",
              "title": "User Registration and Authentication",
              "fullFile": "C:\\Users\\mermo\\Documents\\GitHub\\harmony\\api\\test\\test.js",
              "file": "\\test\\test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "aa7bbefb-46c1-49eb-9cba-1e0c9d79d6ff",
                  "title": "Registration",
                  "fullFile": "C:\\Users\\mermo\\Documents\\GitHub\\harmony\\api\\test\\test.js",
                  "file": "\\test\\test.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should register a new user",
                      "fullTitle": "User Operations User Registration and Authentication Registration should register a new user",
                      "timedOut": false,
                      "duration": 48,
                      "state": "passed",
                      "speed": "medium",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "chai.request(server)\n    .post('/api/auth/register')\n    .send(newUserCredentials)\n    .end((err, res) => {\n        expect(err).to.be.null;\n        res.should.have.status(200);\n        res.body.should.be.an('object');\n        res.body.should.have.property('accessToken');\n        if(res.body.userId) {\n            newUserCredentials.userId = res.body.userId;\n        } else {\n            console.error('No userId in the response body');\n        }\n        done();\n    });",
                      "err": {},
                      "uuid": "4f50a53b-e86f-47a4-879e-7df89295b00b",
                      "parentUUID": "aa7bbefb-46c1-49eb-9cba-1e0c9d79d6ff",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "4f50a53b-e86f-47a4-879e-7df89295b00b"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 48,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                },
                {
                  "uuid": "754ae726-fc63-46b8-bbfc-9be7743e9c7a",
                  "title": "Login",
                  "fullFile": "C:\\Users\\mermo\\Documents\\GitHub\\harmony\\api\\test\\test.js",
                  "file": "\\test\\test.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should login the newly registered user",
                      "fullTitle": "User Operations User Registration and Authentication Login should login the newly registered user",
                      "timedOut": false,
                      "duration": 10,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "chai.request(server)\n    .post('/api/auth/login')\n    .send({\n        email: newUserCredentials.email,\n        password: newUserCredentials.password\n    })\n    .end((err, res) => {\n        res.should.have.status(200);\n        res.body.should.be.an('object');\n        res.body.should.have.property('accessToken');\n        userToken = res.body.accessToken;\n        done();\n    });",
                      "err": {},
                      "uuid": "85e03d80-4d7c-4c42-90b2-82160267e9ef",
                      "parentUUID": "754ae726-fc63-46b8-bbfc-9be7743e9c7a",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "85e03d80-4d7c-4c42-90b2-82160267e9ef"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 10,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "de4e1b52-5b8c-4dc5-92bb-0c58aaf41fe7",
              "title": "Boarding Process",
              "fullFile": "C:\\Users\\mermo\\Documents\\GitHub\\harmony\\api\\test\\test.js",
              "file": "\\test\\test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "6d41f0f4-d44b-4d42-b91d-b6062e4ddc78",
                  "title": "Step 1 - Initial Questionnaire",
                  "fullFile": "C:\\Users\\mermo\\Documents\\GitHub\\harmony\\api\\test\\test.js",
                  "file": "\\test\\test.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should complete step 1 of the boarding process for the new user",
                      "fullTitle": "User Operations Boarding Process Step 1 - Initial Questionnaire should complete step 1 of the boarding process for the new user",
                      "timedOut": false,
                      "duration": 17,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "chai.request(server)\n    .post(`/api/boarding/1`)\n    .set('Authorization', `Bearer ${userToken}`)\n    .send({\n        Q1: 50,\n        Q2: 50,\n        Q3: 50,\n        Q4: 50\n    })\n    .end((err, res) => {\n        expect(err).to.be.null;\n        res.should.have.status(200);\n        res.body.should.be.an('object');\n        res.body.message.should.equal('Data received successfully');\n        done();\n    });",
                      "err": {},
                      "uuid": "5d4935c2-0b4f-446a-9442-c81864c85223",
                      "parentUUID": "6d41f0f4-d44b-4d42-b91d-b6062e4ddc78",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "5d4935c2-0b4f-446a-9442-c81864c85223"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 17,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                },
                {
                  "uuid": "d2db20df-9eea-4b9e-b185-2b3dfb402b32",
                  "title": "Step 2 - Additional Information",
                  "fullFile": "C:\\Users\\mermo\\Documents\\GitHub\\harmony\\api\\test\\test.js",
                  "file": "\\test\\test.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should complete step 2 of the boarding process for the new user",
                      "fullTitle": "User Operations Boarding Process Step 2 - Additional Information should complete step 2 of the boarding process for the new user",
                      "timedOut": false,
                      "duration": 12,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "chai.request(server)\n    .post(`/api/boarding/2`)\n    .set('Authorization', `Bearer ${userToken}`)\n    .send({\n        Q5: 50,\n        Q6: 50,\n        Q7: 50,\n        Q8: 50\n    })\n    .end((err, res) => {\n        expect(err).to.be.null;\n        res.should.have.status(200);\n        res.body.should.be.an('object');\n        res.body.message.should.equal('Data received successfully');\n        done();\n    });",
                      "err": {},
                      "uuid": "fb8e1619-0202-47af-b590-b696cecca9d3",
                      "parentUUID": "d2db20df-9eea-4b9e-b185-2b3dfb402b32",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "fb8e1619-0202-47af-b590-b696cecca9d3"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 12,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                },
                {
                  "uuid": "b97ab390-240e-4016-93fb-a0ef1ac647b2",
                  "title": "Step 3 - Final Questions",
                  "fullFile": "C:\\Users\\mermo\\Documents\\GitHub\\harmony\\api\\test\\test.js",
                  "file": "\\test\\test.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should complete step 3 of the boarding process for the new user",
                      "fullTitle": "User Operations Boarding Process Step 3 - Final Questions should complete step 3 of the boarding process for the new user",
                      "timedOut": false,
                      "duration": 12,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "chai.request(server)\n    .post(`/api/boarding/3`)\n    .set('Authorization', `Bearer ${userToken}`)\n    .send({\n        Q9: 50,\n        Q10: 50,\n        Q11: 50,\n        Q12: 50\n    })\n    .end((err, res) => {\n        expect(err).to.be.null;\n        res.should.have.status(200);\n        res.body.should.be.an('object');\n        res.body.message.should.equal('Data received successfully');\n        done();\n    });",
                      "err": {},
                      "uuid": "91640c31-a16a-4b1c-b2a4-560ad1c51661",
                      "parentUUID": "b97ab390-240e-4016-93fb-a0ef1ac647b2",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "91640c31-a16a-4b1c-b2a4-560ad1c51661"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 12,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                },
                {
                  "uuid": "add1b2e7-6981-4eed-b5ec-b35960831e43",
                  "title": "Step 4 - Ranking Priorities",
                  "fullFile": "C:\\Users\\mermo\\Documents\\GitHub\\harmony\\api\\test\\test.js",
                  "file": "\\test\\test.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should complete step 4 of the boarding process for the new user",
                      "fullTitle": "User Operations Boarding Process Step 4 - Ranking Priorities should complete step 4 of the boarding process for the new user",
                      "timedOut": false,
                      "duration": 10,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const importanceRankings = {\n    Body: 'Most important',\n    Mind: 'Very important',\n    Sense: 'Important',\n    Relations: 'Somewhat important',\n    Journey: 'Not in the focus',\n    Love: 'Least important'\n};\n        \nconst numericRankings = Object.keys(importanceRankings).reduce((acc, key) => {\n    const importanceScale = {\n        'Most important': 6,\n        'Very important': 5,\n        'Important': 4,\n        'Somewhat important': 3,\n        'Not in the focus': 2,\n        'Least important': 1\n    };\n    acc[key] = importanceScale[importanceRankings[key]];\n    return acc;\n}, {});\n        \nchai.request(server)\n    .post(`/api/boarding/4`)\n    .set('Authorization', `Bearer ${userToken}`)\n    .send(numericRankings)\n    .end((err, res) => {\n        expect(err).to.be.null;\n        res.should.have.status(200);\n        res.body.should.be.an('object');\n        res.body.message.should.equal('Data received successfully');\n        done();\n    });",
                      "err": {},
                      "uuid": "1d0e5929-89d5-4618-95a3-47244d2bd346",
                      "parentUUID": "add1b2e7-6981-4eed-b5ec-b35960831e43",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "1d0e5929-89d5-4618-95a3-47244d2bd346"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 10,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "d9d42d98-9c8f-450c-867c-d567c9be9799",
              "title": "Action Listing and Update",
              "fullFile": "C:\\Users\\mermo\\Documents\\GitHub\\harmony\\api\\test\\test.js",
              "file": "\\test\\test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "9802926c-9283-4697-bdcb-a782e5da5bff",
                  "title": "Listing Actions",
                  "fullFile": "C:\\Users\\mermo\\Documents\\GitHub\\harmony\\api\\test\\test.js",
                  "file": "\\test\\test.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should list all available actions",
                      "fullTitle": "User Operations Action Listing and Update Listing Actions should list all available actions",
                      "timedOut": false,
                      "duration": 10,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "chai.request(server)\n    .get('/api/admin/action/list')\n    .set('Authorization', `Bearer ${userToken}`)\n    .end((err, res) => {\n        res.should.have.status(200);\n        res.body.should.be.an('array');\n        if (res.body.length > 0) {\n            actionId = res.body[0]._id; // Save an action ID for later use\n        }\n        done();\n    });",
                      "err": {},
                      "uuid": "7712ae73-c991-4b0b-afac-b2f0584b8fed",
                      "parentUUID": "9802926c-9283-4697-bdcb-a782e5da5bff",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "7712ae73-c991-4b0b-afac-b2f0584b8fed"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 10,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                },
                {
                  "uuid": "b2706420-c375-41b4-9c19-27dc04461216",
                  "title": "Marking an Action as Done",
                  "fullFile": "C:\\Users\\mermo\\Documents\\GitHub\\harmony\\api\\test\\test.js",
                  "file": "\\test\\test.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should mark an action as done",
                      "fullTitle": "User Operations Action Listing and Update Marking an Action as Done should mark an action as done",
                      "timedOut": false,
                      "duration": 9,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "if (!actionId) {\n    done(new Error('No actionId to test with'));\n    return;\n}\nchai.request(server)\n    .post('/api/mark-as-done')\n    .set('Authorization', `Bearer ${userToken}`)\n    .send({ actionId: actionId })\n    .end((err, res) => {\n        res.should.have.status(200);\n        res.body.should.be.an('object');\n        res.body.should.have.property('message').eql('Action marked as done');\n        done();\n    });",
                      "err": {},
                      "uuid": "633fe5ea-8d08-4f77-bd9a-138443b3f889",
                      "parentUUID": "b2706420-c375-41b4-9c19-27dc04461216",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "633fe5ea-8d08-4f77-bd9a-138443b3f889"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 9,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 2000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "report",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "test/report",
        "reportFilename": "report"
      },
      "version": "6.2.0"
    }
  }
}